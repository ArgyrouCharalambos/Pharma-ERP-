<!DOCTYPE html>
<html lang="fr" class="h-full bg-gray-50">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PharmaManager - Journal des Ventes</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');
    body {
      font-family: 'Montserrat', sans-serif;
      background-color: #f0f9ff;
    }
    .slide-enter-active, .slide-leave-active {
      transition: all 0.3s ease-out;
    }
    .slide-enter-from, .slide-leave-to {
      transform: translateY(-10px);
      opacity: 0;
    }
    .shadow-card {
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }
    .scrollbar-custom::-webkit-scrollbar {
      width: 6px;
    }
    .scrollbar-custom::-webkit-scrollbar-track {
      background: #f1f5f9;
    }
    .scrollbar-custom::-webkit-scrollbar-thumb {
      background: #cbd5e1;
      border-radius: 3px;
    }
    .scrollbar-custom::-webkit-scrollbar-thumb:hover {
      background: #94a3b8;
    }
    .disabled\:opacity-50:disabled {
      opacity: 0.5;
    }
    .disabled\:cursor-not-allowed:disabled {
      cursor: not-allowed;
    }
  </style>
</head>
<body class="h-full" x-data="{ 
  searchQuery: '', 
  dateFilter: '',
  sidebarOpen: true,
  expandedSaleId: null 
}">
  <!-- Sidebar -->
  <div class="fixed inset-y-0 z-40 w-[200px] bg-gradient-to-b from-blue-800 to-blue-900 shadow-2xl transform transition-transform duration-300"
       :class="sidebarOpen ? 'translate-x-0' : '-translate-x-full'">
    <div class="py-6 px-2 border-b border-blue-700">
      <h1 class="text-lg font-bold text-white flex items-center">
        <i class="fas fa-clinic-medical mr-1"></i>PharmaManager
      </h1>
    </div>
    <nav class="p-4 space-y-2">
      <a href="/" class="flex items-center p-3 text-white/90 text-sm hover:bg-blue-700/20 font-medium rounded-lg transition-all">
        <i class="fas fa-chart-pie mr-3"></i> Tableau de bord
      </a>
      <a href="/products" class="flex items-center p-3 text-white/90 text-sm font-medium hover:bg-blue-700/20 rounded-lg transition-all">
        <i class="fas fa-pills mr-3"></i> Produits
      </a>
      <a href="/sales" class="flex  bg-blue-700/30 items-center p-3 text-white/90 text-sm font-medium hover:bg-blue-700/20 rounded-lg transition-all">
        <i class="fas fa-receipt mr-3"></i> <p class="ml-1">Ventes</p>
      </a>
      <a href="/products/alerts" class="flex gap-3 text-sm font-medium items-center p-3 text-white/90 hover:bg-blue-700/20 rounded-lg transition-all">
         @if(Alerte)
             <i class="fas fa-exclamation-triangle text-md text-red-600"></i>
             @else
           <i class="fas fa-exclamation-triangle text-md text-purple-100 "></i>
           @endif
           <p>
             Alertes
           </p>
       </a>
    </nav>
  </div>
  
  <div class="h-full flex flex-col transition-all duration-300" :class="sidebarOpen ? 'ml-48' : 'ml-0'">
    <!-- Header -->
     <header class="bg-white shadow-sm">
      <div class="flex items-center justify-between px-6 py-4">
        <button @click="sidebarOpen = !sidebarOpen" class="text-blue-600 hover:text-blue-800">
          <i class="fas fa-bars text-xl"></i>
        </button>
        <div class="flex items-center space-x-4">
          
          <div class="flex items-center space-x-2">
            
            <span class="text-gray-700 font-medium p-3 pt-2 text-white font-bold text-center bg-blue-600 w-10 h-10 rounded-[50%] ">{{(auth.user?.fullName.toUpperCase()).charAt(0)}} </span>
                
            <span class="text-gray-700 font-medium">{{auth.user?.fullName}} </span>
          </div>
        </div>
      </div>
    </header>

    <main class="flex-1 p-6 bg-gray-50">
      <div class="max-w-7xl mx-auto">
        <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8">
          <div>
            <h1 class="text-2xl font-bold text-gray-800 flex items-center">
              <i class="fas fa-cash-register mr-3 text-blue-600"></i>Journal des Ventes
            </h1>
            <p class="text-gray-600 mt-2">Consultez l'historique des transactions de votre pharmacie</p>
          </div>
          <div class="flex space-x-4 mt-4 lg:mt-0">
            <a href="/sales/create" 
               class="bg-gradient-to-r from-blue-600 to-indigo-700 text-white px-6 py-3 rounded-xl hover:from-blue-700 hover:to-indigo-800 transition-all flex items-center shadow-md">
              <i class="fas fa-plus mr-2"></i>Nouvelle Vente
            </a>
          </div>
        </div>

        <!-- Liste des Ventes -->
        <div class="bg-white rounded-2xl shadow-card overflow-hidden">
          <div class="flex items-center space-x-3 mt-3 md:mt-0 px-3 py-2">
            <form id="exportForm" action="/export/monthly-sales" method="GET">
              <div class="flex items-center">
                <input 
                  type="month" 
                  name="month" 
                  id="monthPicker"
                  class="border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  value="2025-07"
                >
                <button 
                  type="submit"
                  class="ml-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white px-6 py-3 rounded-xl hover:from-blue-700 hover:to-indigo-800 transition-all flex items-center shadow-md"
                >
                  <i class="fas fa-file-pdf mr-2"></i>Exporter PDF
                </button>
              </div>
            </form>
          </div>
          
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-blue-50">
                <tr>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600 uppercase">Date & Heure</th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600 uppercase">Nombre de Produit</th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600 uppercase">Montant</th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600 uppercase w-32">Actions</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-200" id="sales-container">
                <!-- Les ventes seront injectées ici par JavaScript -->
              </tbody>
            </table>
          </div>
          
          <!-- Pagination -->
          <div class="px-6 py-4 border-t border-gray-200 flex items-center justify-between">
            <div id="pagination-info" class="text-sm text-gray-600">Affichage de 1 à 5 sur 15 ventes</div>
            <div class="flex space-x-2">
              <button id="prev-page" class="px-3 py-1 rounded-md border border-gray-300 text-gray-600 hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                <i class="fas fa-chevron-left"></i>
              </button>
              <button id="next-page" class="px-3 py-1 rounded-md border border-gray-300 text-gray-600 hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed">
                <i class="fas fa-chevron-right"></i>
              </button>
            </div>
          </div>
        </div>
      </div>
    </main>
    <!-- Footer avec déconnexion -->
    <footer class="bg-gradient-to-r from-blue-600 to-blue-800 text-white py-6">
      <div class="container mx-auto px-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <!-- Logo et copyright -->
          <div class="mb-4 md:mb-0">
            <div class="flex items-center space-x-2">
              <i class="fas fa-clinic-medical text-2xl"></i>
              <span class="text-xl font-bold">PharmaManager</span>
            </div>
            <p class="text-blue-100 text-sm mt-1">© 2025 Tous droits réservés</p>
          </div>

          <!-- Bouton de déconnexion -->
          <form method="GET" action="/deconnect" class="mt-4 md:mt-0">
            <button type="submit" class="bg-white text-blue-600 hover:bg-blue-50 px-4 py-2 rounded-lg font-medium flex items-center transition-colors">
              <i class="fas fa-sign-out-alt mr-2"></i> Déconnexion
            </button>
          </form>
        </div>
      </div>
    </footer>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Configuration
      const salesPerPage = 5;
      let currentPage = 1;
      let allSales = [];
      let filteredSales = [];

      // Éléments du DOM
      const salesContainer = document.getElementById('sales-container');
      const paginationInfo = document.getElementById('pagination-info');
      const prevButton = document.getElementById('prev-page');
      const nextButton = document.getElementById('next-page');
      const searchInput = document.querySelector('[x-ref="searchInput"]');
      
      // Générer des ventes de démonstration
      function generateSampleSales(count) {
        const sales = [];
      
      // Utilisation des données dynamiques du template
      @each(sale in sales)
      sales.push({
        id: {{sale.id}},
        date: "{{sale.createdAt.toFormat('dd/MM/yyyy HH:mm')}}",
        productsCount: {{sale.nombreDeProduit}},
        totalAmount: {{sale.totalPrice}},
        products: [
          @each(item in sale.produits)
          {
              name: "{{item.product?.name}}",
            quantity: {{item.quantity}},
            unitPrice: {{item.prixUnitaire}},
            total: {{item.quantity * item.prixUnitaire}}
          },
          @end
        ]
      });
      @end
      
      return sales;
    }
      
      // Formater un montant
      function formatAmount(amount) {
        return amount.toLocaleString('fr-FR') + ' Fc';
      }
      
      // Rendre les ventes
      function renderSales(sales) {
        salesContainer.innerHTML = ''; // Vider le conteneur

        sales.forEach(sale => {
          // Ligne de résumé
          const summaryRow = document.createElement('tr');
          summaryRow.className = 'hover:bg-blue-50 transition-colors';
          summaryRow.innerHTML = `
            <td class="px-6 py-4">
              <div class="flex items-center">
                <i class="fas fa-clock text-gray-400 mr-2"></i>
                <span>${sale.date}</span>
              </div>
            </td>
            <td class="px-6 py-4 font-semibold text-green-600">${sale.productsCount.toLocaleString('fr-FR')} Pcs</td>
            <td class="px-6 py-4 font-semibold text-green-600">${formatAmount(sale.totalAmount)}</td>
            <td class="px-6 py-4">
              <button 
                class="text-blue-600 hover:text-blue-800 flex items-center toggle-details"
                data-sale-id="${sale.id}"
              >
                <i class="fas fa-chevron-down"></i>
                <span class="ml-2">Détails</span>
              </button>
            </td>
          `;
          salesContainer.appendChild(summaryRow);

          // Ligne de détails
          const detailRow = document.createElement('tr');
          detailRow.id = `details-${sale.id}`;
          detailRow.className = 'hidden';
          detailRow.innerHTML = `
            <td colspan="6" class="px-6 py-4 bg-blue-50">
              <div class="ml-10">
                <h3 class="font-bold text-gray-800 mb-4 flex items-center">
                  Produits vendus
                </h3>
                <div class="bg-white rounded-lg border border-gray-200 overflow-hidden">
                  <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                      <tr>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Produit</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Quantité</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Prix Unitaire</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Total</th>
                      </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                      ${sale.products.map(product => `
                        <tr>
                          <td class="px-4 py-3">
                            <div class="flex items-center">
                              <div class="bg-blue-100 rounded-lg p-2 mr-3">
                                <i class="fas fa-pills text-blue-600"></i>
                              </div>
                              <div>
                                <div class="font-medium">${product.name}</div>
                              </div>
                            </div>
                          </td>
                          <td class="px-4 py-3">${product.quantity.toLocaleString('fr-FR')}</td>
                          <td class="px-4 py-3">${formatAmount(product.unitPrice)}</td>
                          <td class="px-4 py-3 font-medium">${formatAmount(product.total)}</td>
                        </tr>
                      `).join('')}
                    </tbody>
                  </table>
                </div>
              </div>
            </td>
          `;
          salesContainer.appendChild(detailRow);
        });

        // Ajouter les écouteurs d'événements pour les détails
        document.querySelectorAll('.toggle-details').forEach(button => {
          button.addEventListener('click', function() {
            const saleId = this.getAttribute('data-sale-id');
            const detailsRow = document.getElementById(`details-${saleId}`);
            const icon = this.querySelector('i');
            
            if (detailsRow.classList.contains('hidden')) {
              detailsRow.classList.remove('hidden');
              icon.classList.remove('fa-chevron-down');
              icon.classList.add('fa-chevron-up');
            } else {
              detailsRow.classList.add('hidden');
              icon.classList.remove('fa-chevron-up');
              icon.classList.add('fa-chevron-down');
            }
          });
        });
      }
      
      // Initialisation
      function init() {
        // Générer des ventes de démonstration
        allSales = generateSampleSales(15);
        filteredSales = [...allSales];
        
        // Initialiser l'affichage
        updateDisplay();
        setupEventListeners();
      }
      
      // Configuration des écouteurs d'événements
      function setupEventListeners() {
        // Navigation pagination
        prevButton.addEventListener('click', () => navigateToPage(currentPage - 1));
        nextButton.addEventListener('click', () => navigateToPage(currentPage + 1));
      }
      
      // Mise à jour de l'affichage
      function updateDisplay() {
        // Calculer les ventes à afficher pour la page courante
        const startIdx = (currentPage - 1) * salesPerPage;
        const endIdx = startIdx + salesPerPage;
        const salesToShow = filteredSales.slice(startIdx, endIdx);
        
        // Afficher les ventes
        renderSales(salesToShow);
        
        // Mettre à jour les informations de pagination
        updatePaginationInfo();
        
        // Mettre à jour l'état des boutons de navigation
        updateNavigationButtons();
      }
      
      // Mettre à jour les informations de pagination
      function updatePaginationInfo() {
        const totalSales = filteredSales.length;
        const start = Math.min((currentPage - 1) * salesPerPage + 1, totalSales);
        const end = Math.min(currentPage * salesPerPage, totalSales);
        
        paginationInfo.textContent = `Affichage de ${start} à ${end} sur ${totalSales} ventes`;
      }
      
      // Mettre à jour l'état des boutons de navigation
      function updateNavigationButtons() {
        const totalSales = filteredSales.length;
        const totalPages = Math.ceil(totalSales / salesPerPage);
        
        // Bouton précédent
        prevButton.disabled = currentPage === 1;
        
        // Bouton suivant
        nextButton.disabled = currentPage === totalPages || totalPages === 0;
      }
      
      // Navigation entre les pages
      function navigateToPage(page) {
        const totalSales = filteredSales.length;
        const totalPages = Math.ceil(totalSales / salesPerPage);
        
        if (page >= 1 && page <= totalPages) {
          currentPage = page;
          updateDisplay();
        }
      }
      
      // Initialisation
      init();
      
      // Export PDF
      document.getElementById('exportForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const month = document.getElementById('monthPicker').value;
        
        if (!month) {
          alert('Veuillez sélectionner un mois');
          return;
        }
        
        if (confirm(`Exporter les ventes pour ${month}?`)) {
          this.submit();
        }
      });
    });
  </script>
</body>
</html>